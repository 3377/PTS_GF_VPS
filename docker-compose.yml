services:
  # 自动更新容器
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: on-failure:3
    network_mode: host
    # networks:
    #   common:
    # command:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # ports:
    # healthcheck:
    environment:
      # 启用之后仅自动更新labels为true的容器
      - WATCHTOWER_LABEL_ENABLE=true
    # 自动更新标签
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  # 三网ping exporter 
  # 监听9605端口
  fping-exporter:
    image: xiaoleizhang/fping-exporter:4.2
    container_name: fping-exporter
    restart: unless-stopped
    network_mode: host
    # networks:
    #   common:
    privileged: true
    # volumes:
    # host模式不用绑定端口
    # ports:
    #   - 9605:9605
    # healthcheck:
    command: ["fping-exporter", "--fping=/usr/sbin/fping", "-c", "15", "-p", "15"]
    labels:
      com.centurylinklabs.watchtower.enable: "true"


  # node-exporter
  # 监听9100端口
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    # 指定Docker容器的hostname
    hostname: DMIT.PVM.LAX.sPro.Fixed
    restart: unless-stopped
    network_mode: host
    # networks:
    #   common:
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    # host模式不用绑定端口
    # ports:
    #   - 9100:9100
    # healthcheck:
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  # Prometheus时序数据库
  # 监听9090端口
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: on-failure:3
    networks:
      common:
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus:/prometheus
    # ports:
    #   - 9090:9090
    # healthcheck:
    # environment:
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure:3
    networks:
      common:
    # command: 
    volumes:
      - nginx:/etc/nginx
      - html:/usr/share/nginx/html
    ports:
      - 80:80
      - 443:443
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    # environment:
    # 自动更新标签
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  # 可视化面板Grafana 监听3000端口
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      common:
    volumes:
      - grafana:/var/lib/grafana
      - grafanaData:/etc/grafana
    # ports:
    #   - 3000:3000
    # healthcheck:
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    # command:
    labels:
      com.centurylinklabs.watchtower.enable: "true"

volumes:
  prometheus:
  nginx:
  html:
  grafana:
  grafanaData:

networks:
  # 使用公共的Network,你也给成host模式
  common:
    external: true